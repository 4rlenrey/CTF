var _0x257b82 = _0x40ec;
(function(_0x4b4c8b, _0x5840ce) {
    var _0x19b0ee = _0x40ec,
        _0x3ee5b3 = _0x4b4c8b();
    while (!![]) {
        try {
            var _0x191c67 = -parseInt(_0x19b0ee(0x68)) / 0x1 + parseInt(_0x19b0ee(0x74)) / 0x2 + parseInt(_0x19b0ee(0x6f)) / 0x3 + parseInt(_0x19b0ee(0x6c)) / 0x4 * (parseInt(_0x19b0ee(0x72)) / 0x5) + parseInt(_0x19b0ee(0x6d)) / 0x6 + -parseInt(_0x19b0ee(0x70)) / 0x7 + parseInt(_0x19b0ee(0x71)) / 0x8 * (-parseInt(_0x19b0ee(0x6e)) / 0x9);
            if (_0x191c67 === _0x5840ce) break;
            else _0x3ee5b3['push'](_0x3ee5b3['shift']());
        } catch (_0x358b72) {
            _0x3ee5b3['push'](_0x3ee5b3['shift']());
        }
    }
}(_0x5076, 0xbe2a7));

function _0x40ec(_0x5ba7d2, _0x42e2e6) {
    var _0x507687 = _0x5076();
    return _0x40ec = function(_0x40ecbf, _0x4d9ce2) {
        _0x40ecbf = _0x40ecbf - 0x67;
        var _0x617af1 = _0x507687[_0x40ecbf];
        return _0x617af1;
    }, _0x40ec(_0x5ba7d2, _0x42e2e6);
}
var bruh_modulo = _0x3ef40c => {
        let _0x83c109 = 0x1;
        for (var _0x5d9ea8 = 0x0; _0x5d9ea8 < 0x96; _0x5d9ea8++) _0x83c109 = _0x83c109 * _0x3ef40c % 0x96 - 0x3;
        return _0x83c109;
    },
    compare_sets = (_0x2af7cf, _0x24e72f, _0x357767) => {
        var _0xb4e91e = _0x40ec;
        if (_0x24e72f[_0xb4e91e(0x76)] != _0x2af7cf['length']) return ![];
        else {
            for (var _0x8fc1a7 = 0x0; _0x8fc1a7 < _0x2af7cf[_0xb4e91e(0x76)]; _0x8fc1a7++)
                if (!_0x357767) {
                    if (_0x2af7cf[_0x8fc1a7] != _0x24e72f[_0x8fc1a7]) return ![];
                } else {
                    if (_0x2af7cf[_0x8fc1a7] != _0x24e72f[_0x8fc1a7] + 0xa) return ![];
                } return !![];
        }
    };
class flag {
    constructor(_0x37a7df) {
        var _0x6e9656 = _0x40ec;
        this[_0x6e9656(0x77)] = _0x37a7df, this['a_flag_sets'] = [], this['b'] = [0x37, 0x33, -0x5d, -0x3, 0x1, 0x61, 0x33], this['a'] = [0x74, 0x46, 0x52, 0x63, 0x67, 0x56, 0x64], this['d'] = [0x43, -0x2d, 0x1, 0x73, -0x63, 0x25, 0x33], this['c'] = [0x70, 0x6b, 0x75, 0x62, 0x4f, 0x73, 0x7d], this['e'] = [0x70, 0x3c, 0x4a, 0x42, 0x71, 0x73, 0x7d], this[_0x6e9656(0x79)][_0x6e9656(0x6a)](this['a'], this['b'], this['c'], this['d'], this['e']);
    }
    get[_0x257b82(0x69)]() {
        return this['a_flag_sets'];
    }
}
class user_flag {
    constructor(_0x3014a2, _0x3861b0) {
        var _0x1d413e = _0x257b82;
        this[_0x1d413e(0x77)] = _0x3014a2, this[_0x1d413e(0x75)] = [], this[_0x1d413e(0x75)][_0x1d413e(0x6a)]([0x70, 0x3c, 0x4a, 0x42, 0x71, 0x73, 0x7d]);
        for (var _0x3172c3 = 0x0; _0x3172c3 < _0x3861b0[_0x1d413e(0x76)]; _0x3172c3 += 0x7) {
            var _0x5997d9 = [];
            for (var _0x8b37bf = _0x3172c3; _0x8b37bf < _0x3172c3 + 0x7; _0x8b37bf++) {
                _0x5997d9[_0x1d413e(0x6a)](this[_0x1d413e(0x77)] & _0x3172c3 / 0x7 ? _0x3861b0[_0x1d413e(0x6b)](_0x8b37bf) - 0xa : bruh_modulo(_0x3861b0['charCodeAt'](_0x8b37bf)));
            }
            this[_0x1d413e(0x75)][_0x1d413e(0x6a)](_0x5997d9);
        }
    }
    get[_0x257b82(0x69)]() {
        var _0x5e6b3f = _0x257b82;
        return [this[_0x5e6b3f(0x75)][0x0], this[_0x5e6b3f(0x75)][0x1], this[_0x5e6b3f(0x75)][0x4], this[_0x5e6b3f(0x75)][0x3], this['flag_sets'][0x2]];
    }
}
var validate_challenge = (_0x4fe02e, _0x5cd3b6) => {
    var _0x1feae3 = _0x257b82;
    let _0x526618 = _0x4fe02e[_0x1feae3(0x69)],
        _0x44d5d0 = _0x5cd3b6['throw_chars'],
        _0x4b73ca = [compare_sets(_0x526618[0x1], _0x44d5d0[0x1], 0x0), compare_sets(_0x526618[0x0], _0x44d5d0[0x4], 0x1), compare_sets(_0x526618[0x3], _0x44d5d0[0x3], 0x0), compare_sets(_0x526618[0x2], _0x44d5d0[0x2], 0x1), compare_sets(_0x526618[0x4], _0x44d5d0[0x0], 0x0)];
    return !_0x4b73ca[_0x1feae3(0x67)](![]);
};

function _0x5076() {
    var _0x40fea3 = ['485956BDpptx', 'throw_chars', 'push', 'charCodeAt', '4AczDMP', '3165558icgfjM', '929061iRFuJJ', '2182881IpCivf', '5663784VKwZRY', '16TSwiMX', '4989200jDdPUA', 'value', '54770yKfywp', 'flag_sets', 'length', 'bin_v', 'flag_input', 'a_flag_sets', 'includes'];
    _0x5076 = function() {
        return _0x40fea3;
    };
    return _0x5076();
}

function submit_flag() {
    var _0x8ab315 = _0x257b82;
    let _0x32abd1 = new flag(0x1),
        _0x91b18d = new user_flag(0x1, document['getElementById'](_0x8ab315(0x78))[_0x8ab315(0x73)]);
    validate_challenge(_0x32abd1, _0x91b18d) ? input_colors(!![]) : input_colors(![]);
}